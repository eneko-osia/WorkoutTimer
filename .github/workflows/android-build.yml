name: Android Build

on:
  workflow_call:
    inputs:
      build-type:
        required: true
        type: string
    outputs:
      apk-name:
        value: ${{ jobs.build.outputs.apk-name }}
    secrets:
      MYAPP_UPLOAD_STORE_BASE64:
        required: false
      MYAPP_UPLOAD_STORE_FILE:
        required: false
      MYAPP_UPLOAD_STORE_PASSWORD:
        required: false
      MYAPP_UPLOAD_KEY_ALIAS:
        required: false
      MYAPP_UPLOAD_KEY_PASSWORD:
        required: false

jobs:
  build:
    runs-on: ${{matrix.os}}
    outputs:
      apk-name: ${{ steps.generate-apk-name.outputs.apk-name }}
    strategy:
      matrix:
        os: [ ubuntu-24.04 ]
        node-version: [ '23' ]
      fail-fast: false

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: npm install

    - name: Run Lint
      run: npm run lint

    - name: Cache Gradle
      uses: actions/cache@v4
      with:
        path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
            ${{ runner.os }}-gradle-

    - name: Decode keystore
      if: ${{ inputs.build-type == 'release' }}
      run: echo "${{ secrets.MYAPP_UPLOAD_STORE_BASE64 }}" | base64 --decode > "android/app/${{ secrets.MYAPP_UPLOAD_STORE_FILE }}"

    - name: Set keystore
      if: ${{ inputs.build-type == 'release' }}
      run: |
        mkdir -p "$HOME/.gradle"
        echo "MYAPP_UPLOAD_STORE_FILE=${{ secrets.MYAPP_UPLOAD_STORE_FILE }}" >> "$HOME/.gradle/gradle.properties"
        echo "MYAPP_UPLOAD_KEY_ALIAS=${{ secrets.MYAPP_UPLOAD_KEY_ALIAS }}" >> "$HOME/.gradle/gradle.properties"
        echo "MYAPP_UPLOAD_STORE_PASSWORD=${{ secrets.MYAPP_UPLOAD_STORE_PASSWORD }}" >> "$HOME/.gradle/gradle.properties"
        echo "MYAPP_UPLOAD_KEY_PASSWORD=${{ secrets.MYAPP_UPLOAD_KEY_PASSWORD }}" >> "$HOME/.gradle/gradle.properties"

    - name: Extract version
      id: extract-version
      uses: ./.github/actions/extract-version

    - name: Generate codegen
      working-directory: android
      run: ./gradlew generateCodegenArtifactsFromSchema

    - name: Build APK
      working-directory: android
      run: ./gradlew assemble${{ inputs.build-type == 'release' && 'Release' || 'Debug' }}

    - name: Generate APK name
      id: generate-apk-name
      run: |
        SHORT_SHA=$(git rev-parse --short HEAD)
        APK_NAME=com.joganera.workouttimer-${{ inputs.build-type }}-${{ steps.extract-version.outputs.version }}-${SHORT_SHA}
        echo "APK_NAME=$APK_NAME" >> $GITHUB_ENV
        echo "apk-name=$APK_NAME" >> $GITHUB_OUTPUT

    - name: Rename APK
      run: |
        mv android/app/build/outputs/apk/${{ inputs.build-type }}/app-${{ inputs.build-type }}.apk android/app/build/outputs/apk/${{ inputs.build-type }}/${{ env.APK_NAME }}.apk

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.APK_NAME }}
        path: android/app/build/outputs/apk/${{ inputs.build-type }}/${{ env.APK_NAME }}.apk
        retention-days: 3
